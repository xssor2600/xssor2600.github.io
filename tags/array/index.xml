<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>array on 琳琅世界，观山河</title>
    <link>https://www.xssor2600.site/tags/array/</link>
    <description>Recent content in array on 琳琅世界，观山河</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Aug 2020 23:47:36 +0800</lastBuildDate>
    
	<atom:link href="https://www.xssor2600.site/tags/array/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Slice与数组基础比较</title>
      <link>https://www.xssor2600.site/post/slice%E4%B8%8E%E6%95%B0%E7%BB%84%E5%9F%BA%E7%A1%80%E6%AF%94%E8%BE%83/</link>
      <pubDate>Mon, 17 Aug 2020 23:47:36 +0800</pubDate>
      
      <guid>https://www.xssor2600.site/post/slice%E4%B8%8E%E6%95%B0%E7%BB%84%E5%9F%BA%E7%A1%80%E6%AF%94%E8%BE%83/</guid>
      <description>Array 总的来说，数组是同一类型元素的集合，Go 语言中不允许数组混合不同类型的元素。(当然interface{}除外)
通常情况下，array在声明的时候，就要确定数组个数的大小，并且后面不允许容量发生变化。
  数组的声明与赋值
一个数组的表示形式为 [n]T。n 表示数组中元素的数量，T 代表每个元素的类型。
//数组中的所有元素都被自动赋值为数组类型的零值。 func main() { var a [3]int // int array with length 3  fmt.Println(a) } 数组的赋值可以通过数组下标索引赋值，也可以在声明的时候进行赋值：
func main(){ ia := [3]int{1,2,3} var indexa [3]int indexa[0] = 1 indexa[1] = 2 indexa[2] = 3 }   数组是值类型(对赋值和入参的影响)
  数组是值类型而不是引用类型，意味着当将数组赋值给新变量时候，新变量会得到一个原数组的值拷贝副本，当原数组内容发生变化的时候，并不会影响新变量的值。（或者新变量操作数组内容，并不会影响原数组的内容）
func main(){ ia := [3]int{1,2,3} ib := ia ib[0] = 2 fmt.Println(ia) // [1 2 3]  fmt.Println(ib) // [2 2 3]  a := [3]int{1,2,3} fmt.</description>
    </item>
    
  </channel>
</rss>