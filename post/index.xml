<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 琳琅世界，观山河</title>
    <link>https://www.xssor2600.site/post/</link>
    <description>Recent content in Posts on 琳琅世界，观山河</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Jun 2020 23:15:45 +0800</lastBuildDate>
    
	<atom:link href="https://www.xssor2600.site/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mac_iterm2_rz_use</title>
      <link>https://www.xssor2600.site/post/mac_iterm2_rz_use/</link>
      <pubDate>Sun, 28 Jun 2020 23:15:45 +0800</pubDate>
      
      <guid>https://www.xssor2600.site/post/mac_iterm2_rz_use/</guid>
      <description>有这样的需求：在跳板机器登陆远程服务器后，需要将mysql数据库数据导出到Excel，并将文件下载到本地。
mysql数据导出Excel 在登陆跳板机，ssh连接上服务器后，常规情况通过mysql命令可以直接连接进入数据库。此时我并不需要进入mysql命令行，而是需要在Linux命令行中通过mysql查询命令直接将数据导出到本地文件。
可以通过mysql -e 命令来完成操作：
echo &amp;quot;select uid,\`order\`,money,country_code from user_order_record_new_202006 where create_time &amp;gt;= &#39;2020-06-18 00:00:00&#39; and manner_id = 3 and client = 1 and agree =1&amp;quot; | mysql -h xxxxx -uroot -Ddemo -p&#39;123456&#39; --default-character-set=utf8 &amp;gt; /tmp/ios_recharge_18.xls; 当通过指定的s q l执行完成后，数据将会写入到Excel中，在目录中生成：
  Excel文件下载到本地 在具体服务器生成查询数据文件时候，这时候如何将文件下载到本地？
主要是通过rz/sz来实现两端服务器文件的传输。
 环境: Mac + iterm2终端: 需要在mac中安装lrzsz插件：  brew install lrzsz  Iterm2配置文件发送send,received脚本命令:
具体脚本参照工程: iterm2-zmodem
在目录/usr/local/bin/目录下分别创建脚本iterm2-send-zmodem.sh，iterm2-recv-zmodem.sh：
 iterm2-send-zmodem.sh  #!/bin/bash # Author: Matt Mastracci (matthew@mastracci.com) # AppleScript from http://stackoverflow.</description>
    </item>
    
    <item>
      <title>Golang基础知识</title>
      <link>https://www.xssor2600.site/post/golang%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Thu, 25 Jun 2020 17:03:19 +0800</pubDate>
      
      <guid>https://www.xssor2600.site/post/golang%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>常量与变量 const limit = 512 const top uint16 = 1421 const x,y int = 1,3 var a int var b string var c float64 var d [5] int //数组 var e [] int //数组切片 var f * int //正确 var v1 int = 5 //正确 var v2 = 5 //正确，编译器自动推导出V2类型 v3 := 5 //正确，编译器自动推导出V3的类型 基础数据类型 const limit = 512 const top uint16 = 1421 const x,y int = 1,3 var a int var b string var c float64 var d [5] int //数组 var e [] int //数组切片 var f * int //正确 var v1 int = 5 //正确 var v2 = 5 //正确，编译器自动推导出V2类型 v3 := 5 //正确，编译器自动推导出V3的类型 // 两种浮点类型和两种复数类型 float32	±3.</description>
    </item>
    
    <item>
      <title>如何使用hugo来编写文章</title>
      <link>https://www.xssor2600.site/post/how_to_use_hugo/</link>
      <pubDate>Tue, 23 Jun 2020 23:05:15 +0800</pubDate>
      
      <guid>https://www.xssor2600.site/post/how_to_use_hugo/</guid>
      <description>创建文章  创建一个about页面 创建的about页面会自动生成到content/about.md. 创建第一篇文章，放置post目录下 若是平时想要生成文章，则通过下面命令来创建文章:  hugo new post/new_page_name.md 安装皮肤 在皮肤列表hugo皮肤列表中找到喜欢的主题，并通过git clone到themes目录下，在启动的时候，可以指定名录。
$ cd themes $ git clone https://github.com/spf13/hyde.git 运行hugo 在site的根路径执行hugo启动服务器命令:
hugo server --theme=hyde --buildDrafts // or hugo server -w 在命令行看到启动后，本地可以通过地址http://localhost:1313打开即可。
github部署 首先需要在站点根路径下，通过一下命令来生成静态页面:
hugo --theme=hyde --baseUrl=&amp;quot;https://xssor2600.github.io/&amp;quot; 然后进入public目录，提交代码到GitHub即可
cd public git add -A git commit -m &amp;quot;first commit&amp;quot; git push -u origin master 文章编写  添加标签tag 若是想对文章添加一些标签，那么可以按照如下方式在文章创建开头使用tags属性：  tags: [ &amp;quot;tag1&amp;quot;, &amp;quot;tag2&amp;quot;, &amp;quot;tag3&amp;quot; ] </description>
    </item>
    
  </channel>
</rss>